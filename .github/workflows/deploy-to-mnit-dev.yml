name: Deploy to MNIT Dev

on:
  workflow_run:
    workflows: ["Run tests"]
    branches: [main]
    types:
      - completed
  workflow_dispatch:
    inputs: { }

jobs:
  deploy:
    name: Deploy to Dev
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
    - name: Workflow Webhook Action
      uses: distributhor/workflow-webhook@v2.0.2
      env:
        webhook_url: ${{ secrets.MNIT_DEV_WEBHOOK_URL }}
        webhook_secret: ${{ secrets.MNIT_DEV_WEBHOOK_SECRET }}

  # Deploy to demo steps:
  # 1. find latest git release (note, need to merge into the release action. Release tag will come from the release command)
  # 2. Login to openshift non-prod
  # 3. update build config, set git ref to the release tag
  # 4. update build config, set image tag to the release tag
  # 5. build image
  # 6. update deployment config to the release tag
  # 7. rollout updated image
  demodeploy:
    name: deploy to mnit demo
    runs-on: ubuntu-latest
    steps:
    - name: Fetch Latest Release
      id: fetch-latest-release
      uses: thebritican/fetch-latest-release@v2.0.0
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
    - name: Authenticate and set context for non-prod
      uses: redhat-actions/oc-login@v1
      with:
        openshift_server_url: ${{ secrets.OPENSHIFT_SERVER_NON_PROD }}
        openshift_token: ${{ secrets.OPENSHIFT_TOKEN_NON_PROD }}
        namespace: ${{ secrets.OPENSHIFT_NAMESPACE_NON_PROD }}
    - name: update and run build
      run: |
        oc patch bc mn-benefits-release -p '{"spec":{"source":{"git":{"ref":"${{ steps.fetch-latest-release.outputs.tag_name }}"}}}}'
        oc patch bc mn-benefits-release -p '{"spec":{"output":{"to":{"name":"mn-benefits:${{ steps.fetch-latest-release.outputs.tag_name }}"}}}}'
        oc start-build mn-benefits-release --follow
        oc patch dc mn-benefits-atst -p '{"spec":{"triggers":[{"type": "ImageChange", "imageChangeParams":{"from":{"name":"mn-benefits:${{ steps.fetch-latest-release.outputs.tag_name }}"}, "containerNames":["mn-benefits-atst"]}}]}}'
        oc rollout latest dc/mn-benefits-atst
        
  # Deploy to prod steps:
  # 1. find latest git release
  # 2. Login to openshift prod
  # 3. Import image tagged with the git release tag from non-prod to prod
  # 4. Rollout updated image
  proddeploy:
    name: deploy to mnit prod
    runs-on: ubuntu-latest
    steps:
    - name: Fetch Latest Release
      id: fetch-latest-release
      uses: thebritican/fetch-latest-release@v2.0.0
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}        
    - name: Authenticate and set context for prod
      uses: redhat-actions/oc-login@v1
      with:
        openshift_server_url: ${{ secrets.OPENSHIFT_SERVER_PROD }}
        openshift_token: ${{ secrets.OPENSHIFT_TOKEN_PROD }}
        namespace: ${{ secrets.OPENSHIFT_NAMESPACE_PROD }}
    - name: import and deploy to prod
      run: |
        oc import-image mn-benefits:${{ steps.fetch-latest-release.outputs.tag_name }} --from=${{ secrets.OPENSHIFT_IMAGE_LOCATION }}/mn-benefits:${{ steps.fetch-latest-release.outputs.tag_name }} -n ${{ secrets.OPENSHIFT_NAMESPACE_PROD }}
        oc patch dc mn-benefits-prod -p '{"spec":{"triggers":[{"type": "ImageChange", "imageChangeParams":{"from":{"name":"mn-benefits:${{ steps.fetch-latest-release.outputs.tag_name }}"}, "containerNames":["mn-benefits-prod"]}}]}}'
        oc rollout latest dc/mn-benefits-prod
    
    strategy:
      max-parallel: 1
